plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group 'com.give928'
version '1.0-SNAPSHOT'
sourceCompatibility='11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

//    implementation 'mysql:mysql-connector-java'
    implementation 'org.postgresql:postgresql'

    implementation 'de.codecentric:chaos-monkey-spring-boot:2.5.4'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.tngtech.archunit:archunit-junit5-engine:0.23.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.1'
    testImplementation 'org.testcontainers:postgresql:1.17.1'
    testImplementation 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

tasks.named('test') {
    useJUnitPlatform() {
//        includeTags 'local | dev' // !: not, &: and, |: or
    }
    testLogging {
        events 'passed', 'skipped', 'failed'//, 'standardOut', 'standardError'
    }
//    testLogging.showStandardStreams = true
//    beforeTest { descriptor ->
//        logger.lifecycle("Running test: " + descriptor)
//    }
//    onOutput { descriptor, event ->
//        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
//    }
}
